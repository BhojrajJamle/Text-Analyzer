{"version":3,"sources":["components/About.js","components/Navebar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","myStyle","color","mode","backgroundColor","border","borderColor","className","style","id","type","Navebar","red","yellow","green","orange","to","title","aboutText","onClick","toggleMode","hight","width","cursor","boxShadow","TextForm","useState","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","charAt","slice","trim","split","join","navigator","clipboard","writeText","filter","element","Alert","height","alert","role","word","lower","capitalize","msg","prototypes","PropTypes","string","aboutTitle","defaultProps","App","setMode","setRed","setYellow","setGreen","setOrange","setAlert","message","setTimeout","cls","document","body","classList","remove","console","log","add","toggleRed","toggleYellow","toggleGreen","toggleOrange","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5c7e0967.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function About(props) {\r\n  let myStyle = {\r\n    color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n    backgroundColor: props.mode === \"dark\" ? \" rgb(118 165 203)\" : \"white\",\r\n    border: \"2px solid\",\r\n    borderColor: props.mode === \"dark\" ? \"white\" : \"rgb(4, 39, 67)\",\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"cuntainer\"\r\n      style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n    >\r\n      <h1 className=\"my-2\">About us</h1>\r\n      <div className=\"accordion\" style={myStyle} id=\"accordionExample\">\r\n        <div className=\"accordion-item mx-2 my-2\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingOne\">\r\n            <button\r\n              className=\"accordion-button\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseOne\"\r\n              aria-expanded=\"true\"\r\n              aria-controls=\"collapseOne\"\r\n            >\r\n              <strong> Analyze your text</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseOne\"\r\n            className=\"accordion-collapse collapse show\"\r\n            aria-labelledby=\"headingOne\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              This is the Mj-Creations, Text Analyzer here you can analyze ,\r\n              convert in UPPERCASE , convert in lowercase , capitalize first\r\n              latter , you can remove white spaace , you can remove extra\r\n              spaces. This is very use full Tool for the persons who have less\r\n              time to do work like this .\r\n              {/* This is the Mj-Creations, Text Analyzer here you can analyze , convert in UPPERCASE , convert in lowercase , capitalize first latter , you can remove white spaace , you can remove extra spaces. This is very use full Tool for the persons who have less time to do work like this . */}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item mx-2 my-2\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseTwo\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseTwo\"\r\n            >\r\n              <strong> free to use </strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseTwo\"\r\n            className=\"accordion-collapse collapse\"\r\n            style={myStyle}\r\n            aria-labelledby=\"headingTwo\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              Our website is free to use you don't have to Pay to do your work\r\n              here.\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"accordion-item mx-2 my-2\" style={myStyle}>\r\n          <h2 className=\"accordion-header\" id=\"headingThree\">\r\n            <button\r\n              className=\"accordion-button collapsed\"\r\n              style={myStyle}\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#collapseThree\"\r\n              aria-expanded=\"false\"\r\n              aria-controls=\"collapseThree\"\r\n            >\r\n              <strong> Browser compaitible</strong>\r\n            </button>\r\n          </h2>\r\n          <div\r\n            id=\"collapseThree\"\r\n            className=\"accordion-collapse collapse\"\r\n            style={myStyle}\r\n            aria-labelledby=\"headingThree\"\r\n            data-bs-parent=\"#accordionExample\"\r\n          >\r\n            <div className=\"accordion-body\" style={myStyle}>\r\n              {\" \"}\r\n              This web-site is browser compaitible so you can use it in any\r\n              browser its performans will not decrease\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Navebar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode} \r\n      navbar-${props.red} bg-${props.red} \r\n      navbar-${props.yellow} bg-${props.yellow}\r\n      navbar-${props.green} bg-${props.green}\r\n      navbar-${props.orange} bg-${props.orange}\r\n      `}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <Link className=\"navbar-brand\" to=\"/z\">\r\n          {props.title}\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\"> */}\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link \" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n          {/* nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn */}\r\n\r\n          <div className=\"d-flex\">\r\n            <div\r\n              className=\"bg-primary  rounded mx-2\"\r\n              onClick={() => {\r\n                props.toggleMode(\"primary\");\r\n              }}\r\n              style={{ hight: \"25px\", width: \"25px\", cursor: \"pointer\" }}\r\n            ></div>\r\n            {/* nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn */}\r\n            <div\r\n              className=\"bg-danger  rounded mx-2\"\r\n              onClick={() => {\r\n                props.toggleMode(\"danger\");\r\n              }}\r\n              style={{ hight: \"25px\", width: \"25px\", cursor: \"pointer\" }}\r\n            ></div>\r\n            {/* nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn */}\r\n            <div\r\n              className=\"bg-success  rounded mx-2\"\r\n              onClick={() => {\r\n                props.toggleMode(\"success\");\r\n              }}\r\n              style={{ hight: \"25px\", width: \"25px\", cursor: \"pointer\" }}\r\n            ></div>\r\n\r\n            {/* ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss */}\r\n            <div\r\n              className=\"bg-light rounded mx-2\"\r\n              onClick={() => {\r\n                props.toggleMode(\"light\");\r\n              }}\r\n              style={{\r\n                hight: \"25px\",\r\n                width: \"25px\",\r\n                cursor: \"pointer\",\r\n                border: \"1px solid lightgrey\",\r\n                boxShadow: \" 0.5px 1.5px lightgrey\",\r\n              }}\r\n            ></div>\r\n            {/* ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss */}\r\n            <div\r\n              className=\"bg-dark  rounded mx-2\"\r\n              onClick={() => {\r\n                props.toggleMode(\"dark\");\r\n              }}\r\n              style={{ hight: \"25px\", width: \"25px\", cursor: \"pointer\" }}\r\n            ></div>\r\n            {/* nnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnnn */}\r\n            <div\r\n              className=\"bg-warning text-warning rounded mx-2\"\r\n              onClick={() => {\r\n                props.toggleMode(\"warning\");\r\n              }}\r\n              style={{ hight: \"25px\", width: \"25px\", cursor: \"pointer\" }}\r\n            >\r\n              .\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nNavebar.prototypes = { title: PropTypes.string, aboutTitle: PropTypes.string };\r\n\r\nNavebar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleupclick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to UPPERCASE !\", \"success\");\r\n  };\r\n  const handleLoclick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"converted to lovercase !\", \"success\");\r\n  };\r\n  const handleClearclick = () => {\r\n    // let newText = text.toLowerCase();\r\n    setText(\"\");\r\n    props.showAlert(\"text deleted !\", \"success\");\r\n  };\r\n  const handleAnclick = () => {\r\n    let firstchar = text.charAt(0);\r\n    let newText = firstchar.toUpperCase();\r\n    setText(newText + text.slice(1));\r\n    props.showAlert(\"1st later has been capitalized !\", \"success\");\r\n  };\r\n  const handleUnclick = () => {\r\n    let newText = text.trim();\r\n    setText(newText);\r\n    props.showAlert(\" white space has been removed !\", \"success\");\r\n  };\r\n  const handleExtraSpace = () => {\r\n    let newText = text.split(/[  ]+/);\r\n    setText(newText.join(\" \"));\r\n    props.showAlert(\"extra space has been removed !\", \"success\");\r\n  };\r\n  const handleCopy = () => {\r\n    navigator.clipboard.writeText(text);\r\n    props.showAlert(\"text copyed to clipbord !\", \"success\");\r\n  };\r\n\r\n  // there is anothere function\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"cantainer\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h2 className=\"mb-3\">{props.heading}</h2>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor:\r\n                props.mode === \"dark\"\r\n                  ? \"#13466e\"\r\n                  : \"white\" - props.red === \"red\"\r\n                  ? \"black\"\r\n                  : \"white\",\r\n              color:\r\n                props.mode === \"dark\"\r\n                  ? \"white\"\r\n                  : \"black\" - props.red === \"red\"\r\n                  ? \"white\"\r\n                  : \"black\",\r\n            }}\r\n            id=\"my box\"\r\n            rows=\"8\"\r\n          ></textarea>\r\n        </div>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-1 my-1\"\r\n          onClick={handleupclick}\r\n        >\r\n          convert to uppercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-1 my-1\"\r\n          onClick={handleLoclick}\r\n        >\r\n          convert to lowercase\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-1 my-1\"\r\n          onClick={handleAnclick}\r\n        >\r\n          1st latter capital\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-1 my-1\"\r\n          onClick={handleUnclick}\r\n        >\r\n          Remove white space\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-1 my-1\"\r\n          onClick={handleExtraSpace}\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-1 my-1\"\r\n          onClick={handleCopy}\r\n        >\r\n          copy text\r\n        </button>\r\n        <button\r\n          disabled={text.length === 0}\r\n          className=\"btn btn-info mx-1 my-1\"\r\n          onClick={handleClearclick}\r\n        >\r\n          clear text\r\n        </button>\r\n      </div>\r\n      <div\r\n        className=\"container my-3\"\r\n        style={{\r\n          color:\r\n            props.mode === \"dark\"\r\n              ? \"white\"\r\n              : \"black\" - props.red === \"red\"\r\n              ? \"white\"\r\n              : \"black\",\r\n        }}\r\n      >\r\n        <h2>your text summary</h2>\r\n        <p>\r\n          {\r\n            text.split(/\\s+/).filter((element) => {\r\n              return element.length !== 0;\r\n            }).length\r\n          }{\" \"}\r\n          words and {text.length} charachters\r\n        </p>\r\n        <p>\r\n          {0.008 *\r\n            text.split(\" \").filter((element) => {\r\n              return element.length !== 0;\r\n            }).length}{\" \"}\r\n          minutes to read\r\n        </p>\r\n        <h2>preview</h2>\r\n        <p>{text.length > 0 ? text : \"Nothig to preview!\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    <div style={{ height: \"50px\" }}>\r\n      {props.alert && (\r\n        <div\r\n          className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n          role=\"alert\"\r\n        >\r\n          <strong> {capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navebar from \"./components/Navebar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [red, setRed] = useState(\"light\");\n  const [yellow, setYellow] = useState(\"light\");\n  const [green, setGreen] = useState(\"light\");\n  const [orange, setOrange] = useState(\"light\");\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({ msg: message, type: type });\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  };\n  // wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\n\n  const toggleOrange = () => {\n    if (orange === \"light\") {\n      setOrange(\"dark\");\n      document.body.style.backgroundColor = \" #bfffe3\";\n      showAlert(\"orange mode has been enabaled\", \"success\");\n      // document.title = \"Text analyzer - dark mode ON\";\n      // setInterval(() => {\n      //   document.title = \"Install Text analyzer now \";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \" Text analyzer is a best \";\n      // }, 1500);\n    } else {\n      setOrange(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      // document.title = \"Text analyzer - light mode ON\";\n      showAlert(\"light mode has been enabaled\", \"success\");\n    }\n  };\n  // wwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\n\n  const toggleGreen = () => {\n    if (green === \"light\") {\n      setGreen(\"dark\");\n      document.body.style.backgroundColor = \"green\";\n      showAlert(\"green mode has been enabaled\", \"success\");\n    } else {\n      setGreen(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabaled\", \"success\");\n    }\n  };\n  // sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\n\n  const toggleYellow = () => {\n    if (yellow === \"light\") {\n      setYellow(\"dark\");\n      document.body.style.backgroundColor = \"yellow\";\n      showAlert(\"yellow mode has been enabaled\", \"success\");\n    } else {\n      setYellow(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabaled\", \"success\");\n    }\n  };\n  // ssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\n\n  const toggleRed = () => {\n    if (red === \"light\") {\n      setRed(\"dark\");\n      document.body.style.backgroundColor = \"red\";\n      showAlert(\"Red mode has been enabaled\", \"success\");\n    } else {\n      setRed(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"light mode has been enabaled\", \"success\");\n    }\n  };\n  // sssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssssss\n\n  const removeBodyClasses = () => {\n    document.body.classList.remove(\"bg-light\");\n    document.body.classList.remove(\"bg-dark\");\n    document.body.classList.remove(\"bg-danger\");\n    document.body.classList.remove(\"bg-success\");\n    document.body.classList.remove(\"bg-warning\");\n  };\n\n  const toggleMode = (cls) => {\n    removeBodyClasses();\n    console.log(cls);\n    document.body.classList.add(\"bg-\" + cls);\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"dark mode has been enabaled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      // document.title = \"Text analyzer - light mode ON\";\n      showAlert(\"light mode has been enabaled\", \"success\");\n    }\n  };\n  // mmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmmm\n\n  return (\n    <>\n      {/* <Navebar title=\"MJ Creations\" aboutText=\"About\" />\n      <Navebar /> */}\n      <Router>\n        <Navebar\n          title=\"MJ Creations\"\n          mode={mode}\n          toggleMode={toggleMode}\n          red={red}\n          toggleRed={toggleRed}\n          yellow={yellow}\n          toggleYellow={toggleYellow}\n          green={green}\n          toggleGreen={toggleGreen}\n          orange={orange}\n          toggleOrange={toggleOrange}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About\n                mode={mode}\n                red={red}\n                yellow={yellow}\n                green={green}\n                orange={orange}\n              />\n            </Route>\n            <Route path=\"/\">\n              <TextForm\n                showAlert={showAlert}\n                heading=\"Try Text Analyzer- word counter, character counter, remove extra spaces \"\n                mode={mode}\n                red={red}\n                yellow={yellow}\n                green={green}\n                orange={orange}\n              />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}